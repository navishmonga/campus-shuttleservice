{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Projects\\\\campus-shuttleservice\\\\src\\\\components\\\\Tracking.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tracking() {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState('Campus A');\n  const [isTrackingActive, setIsTrackingActive] = useState(false);\n  const startTracking = () => {\n    setIsTrackingActive(true);\n    // Simulate tracking by updating location periodically\n    const trackingInterval = setInterval(() => {\n      const locations = ['Campus A', 'Campus B', 'Campus C', 'Campus D'];\n      const randomIndex = Math.floor(Math.random() * locations.length);\n      setCurrentLocation(locations[randomIndex]);\n    }, 3000); // Update every 3 seconds\n\n    return () => {\n      setIsTrackingActive(false);\n      clearInterval(trackingInterval);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shuttle Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Location: \", currentLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isTrackingActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTracking,\n      disabled: true,\n      children: \"Tracking in progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTracking,\n      children: \"Start Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Tracking, \"c9vH8xJJyJyCs7WlGkhvBrYTvow=\");\n_c = Tracking;\nexport default Tracking;\nvar _c;\n$RefreshReg$(_c, \"Tracking\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Tracking","_s","currentLocation","setCurrentLocation","isTrackingActive","setIsTrackingActive","startTracking","trackingInterval","setInterval","locations","randomIndex","Math","floor","random","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Projects/campus-shuttleservice/src/components/Tracking.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Tracking() {\r\n  const [currentLocation, setCurrentLocation] = useState('Campus A');\r\n  const [isTrackingActive, setIsTrackingActive] = useState(false);\r\n\r\n  const startTracking = () => {\r\n    setIsTrackingActive(true);\r\n    // Simulate tracking by updating location periodically\r\n    const trackingInterval = setInterval(() => {\r\n      const locations = ['Campus A', 'Campus B', 'Campus C', 'Campus D'];\r\n      const randomIndex = Math.floor(Math.random() * locations.length);\r\n      setCurrentLocation(locations[randomIndex]);\r\n    }, 3000); // Update every 3 seconds\r\n\r\n    return () => {\r\n      setIsTrackingActive(false);\r\n      clearInterval(trackingInterval);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h2>Shuttle Tracking</h2>\r\n      <p>Current Location: {currentLocation}</p>\r\n      {isTrackingActive ? (\r\n        <button onClick={startTracking} disabled>\r\n          Tracking in progress\r\n        </button>\r\n      ) : (\r\n        <button onClick={startTracking}>Start Tracking</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tracking;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,UAAU,CAAC;EAClE,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BD,mBAAmB,CAAC,IAAI,CAAC;IACzB;IACA,MAAME,gBAAgB,GAAGC,WAAW,CAAC,MAAM;MACzC,MAAMC,SAAS,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;MAClE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,SAAS,CAACK,MAAM,CAAC;MAChEX,kBAAkB,CAACM,SAAS,CAACC,WAAW,CAAC,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAM;MACXL,mBAAmB,CAAC,KAAK,CAAC;MAC1BU,aAAa,CAACR,gBAAgB,CAAC;IACjC,CAAC;EACH,CAAC;EAED,oBACER,OAAA;IAAKiB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MAAAkB,QAAA,GAAG,oBAAkB,EAACf,eAAe;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCjB,gBAAgB,gBACfL,OAAA;MAAQuB,OAAO,EAAEhB,aAAc;MAACiB,QAAQ;MAAAN,QAAA,EAAC;IAEzC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETtB,OAAA;MAAQuB,OAAO,EAAEhB,aAAc;MAAAW,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAhCQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}